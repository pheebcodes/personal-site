---
import { z } from "astro:content";
import { compareDesc, isAfter } from "date-fns";
import Base from "../../layouts/base.astro";
import Time from "../../components/time.astro";
import { UTCDate } from "@date-fns/utc";

const poemSchema = z.object({
	title: z.string(),
	date: z.instanceof(UTCDate),
	draft: z.boolean().optional(),
	url: z.string(),
});
const poems = Object.values(
	import.meta.glob("./poems/*.astro", { eager: true })
)
	.map((mod) => poemSchema.parse(mod))
	.filter(
		(mod) =>
			import.meta.env.DEV || (!mod.draft && isAfter(new UTCDate(), mod.date))
	)
	.toSorted((a, b) => compareDesc(a.date, b.date));
---

<Base title="poems" section="poetry" class="col container margin-gap grow">
	<ol class="toc">
		{
			poems.map((poem) => (
				<li class="col">
					<span>
						<a href={poem.url}>{poem.title}</a>
					</span>
					<Time date={poem.date} />
					{poem.draft ? <i>(draft)</i> : null}
				</li>
			))
		}
	</ol>
</Base>
