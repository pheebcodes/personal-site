---
import { getCollection } from "astro:content";
import { compareDesc, isAfter, parse } from "date-fns";
import Base from "../../layouts/base.astro";
import Time from "../../components/time.astro";
import { UTCDate } from "@date-fns/utc";

const collection = await getCollection(
	"poems",
	(poem) => import.meta.env.DEV || isAfter(new UTCDate(), poem.data.date)
);

const dateFmt = "yyyy-MM-dd";
const poems = collection
	.map((poem) => ({
		title: poem.data.title,
		date: parse(poem.id.slice(0, dateFmt.length), dateFmt, new Date()),
		url: `/poetry/poems/${poem.id}`,
	}))
	.toSorted((a, b) => compareDesc(a.date, b.date));
---

<Base title="poems" section="poetry" class="col container margin-gap grow">
	<header class="row space-gap">
		<h2>feed:</h2>

		<a href="/poetry.rss">rss</a>
	</header>

	<ol class="toc">
		{
			poems.map((poem) => (
				<li class="col">
					<span>
						<a href={poem.url}>{poem.title}</a>
					</span>
					<Time date={poem.date} />
				</li>
			))
		}
	</ol>
</Base>
